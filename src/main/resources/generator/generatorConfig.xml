<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<generatorConfiguration>
    <!-- 引入数据库连接配置,要想引，必须指定配置文件的位置，不然下面${}不能用，报错 -->
    <properties resource="application.properties"/>

    <context id="Mysql" targetRuntime="MyBatis3Simple" defaultModelType="flat">
        <property name="beginningDelimiter" value="`"/>
        <property name="endingDelimiter" value="`"/>

        <!-- 配置 tk.mybatis 插件，让生成的所有mapper实现BaseMapper -->
        <plugin type="tk.mybatis.mapper.generator.MapperPlugin">
            <property name="mappers" value="com.tk.mybatis.BaseMapper"/>
        </plugin>

        <!-- 数据库连接配置，引入方式，也可以直接写 -->
        <jdbcConnection
                driverClass="${spring.datasource.driver-class-name}"
                connectionURL="${spring.datasource.url}"
                userId="${spring.datasource.username}"
                password="${spring.datasource.password}">
        </jdbcConnection>

        <!-- 配置实体类存放路径 -->
        <javaModelGenerator targetPackage="com.ling.dao.entity" targetProject="src/main/java"/>

        <!-- 配置 XML 存放路径 -->
        <sqlMapGenerator targetPackage="mapping" targetProject="src/main/resources"/>

        <!-- 配置 DAO 存放路径 -->
        <javaClientGenerator
                targetPackage="com.ling.dao.mapper"
                targetProject="src/main/java"
                type="XMLMAPPER"/>

        <!-- 配置需要指定生成的数据库和表，% 代表所有表 -->
       <!-- <table tableName="%" >
            &lt;!&ndash; 配置主键生成策略 ,所有表的主键都叫id&ndash;&gt;
            <generatedKey column="id" sqlStatement="Mysql" identity="true"/>
        </table>-->
        
        <!--或者单个方式生成-->
        <table tableName="schedule_job" domainObjectName="ScheduleJob">
        </table>
    </context>
</generatorConfiguration>